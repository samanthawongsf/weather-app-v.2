{"ast":null,"code":"var _jsxFileName = \"/Users/samanthawongsf/weather-app-v.2/src/components/HistoricalData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { convertTemp } from '../utils/tempConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistoricalData({\n  data,\n  isFahrenheit\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n\n  // Format the date\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => setExpanded(!expanded),\n      className: \"collapsible-header\",\n      children: [\"Historical Weather Data \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"expand-icon\",\n        children: expanded ? '▼' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historical-data\",\n      children: data.map((dayData, index) => {\n        const date = formatDate(dayData.current.dt);\n        const temperature = convertTemp(dayData.current.temp, isFahrenheit);\n        const description = dayData.current.weather[0].description;\n        const iconCode = dayData.current.weather[0].icon;\n        const iconUrl = `https://openweathermap.org/img/wn/${iconCode}.png`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"historical-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"historical-date\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"historical-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconUrl,\n              alt: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"historical-temp\",\n              children: [temperature, \"\\xB0\", isFahrenheit ? 'F' : 'C']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"historical-description\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoricalData, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n_c = HistoricalData;\nexport default HistoricalData;\nvar _c;\n$RefreshReg$(_c, \"HistoricalData\");","map":{"version":3,"names":["React","useState","convertTemp","jsxDEV","_jsxDEV","HistoricalData","data","isFahrenheit","_s","expanded","setExpanded","formatDate","timestamp","date","Date","toLocaleDateString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","dayData","index","current","dt","temperature","temp","description","weather","iconCode","icon","iconUrl","src","alt","_c","$RefreshReg$"],"sources":["/Users/samanthawongsf/weather-app-v.2/src/components/HistoricalData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { convertTemp } from '../utils/tempConverter';\n\nfunction HistoricalData({ data, isFahrenheit }) {\n  const [expanded, setExpanded] = useState(false);\n  \n  // Format the date\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString();\n  };\n\n  return (\n    <div className=\"forecast-section\">\n      <h2 onClick={() => setExpanded(!expanded)} className=\"collapsible-header\">\n        Historical Weather Data <span className=\"expand-icon\">{expanded ? '▼' : '▶'}</span>\n      </h2>\n      \n      {expanded && (\n        <div className=\"historical-data\">\n          {data.map((dayData, index) => {\n            const date = formatDate(dayData.current.dt);\n            const temperature = convertTemp(dayData.current.temp, isFahrenheit);\n            const description = dayData.current.weather[0].description;\n            const iconCode = dayData.current.weather[0].icon;\n            const iconUrl = `https://openweathermap.org/img/wn/${iconCode}.png`;\n            \n            return (\n              <div className=\"historical-item\" key={index}>\n                <div className=\"historical-date\">{date}</div>\n                <div className=\"historical-details\">\n                  <img src={iconUrl} alt={description} />\n                  <span className=\"historical-temp\">{temperature}°{isFahrenheit ? 'F' : 'C'}</span>\n                  <span className=\"historical-description\">{description}</span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HistoricalData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}